#!/usr/bin/env dash

# Notes ------------------------------------------------------------------------ {{{

#   Use jq to read & process yabai output:
#   https://github.com/koekeishiya/yabai/issues/18
#   	yabai -m query --spaces --space 2 | jq .monitor

# }}}

# echo "$SHELL"
. /Users/adamwagner/Programming/dotfiles/window-managers/yabai/yabairc_vars # source yabairc vars
if pgrep sicht; then pkill sicht; fi                                        # kill ubersicht if running
if test $BAR = 'uber'; then uber-bar-refresh; fi

# delete monocle mode lock files from previous sessions
# from https://github.com/koekeishiya/yabai/issues/83
find "${TMPDIR}" -type f -perm +111 -name "yabai_${USER}_monocle_mode_*" -delete

# Bar settings {{{
  yabai -m config status_bar                   "$YABAI_BAR"
  yabai -m config status_bar_icon_font         "Operator Mono SSm Lig Book:Regular:13.0"
  yabai -m config status_bar_text_font         "Operator Mono SSm Lig Book:Regular:13.0"
  yabai -m config status_bar_background_color  0xdd242e38
  yabai -m config status_bar_foreground_color  0xffa8a8a8

  yabai -m config status_bar_space_icon_strip  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16

  yabai -m config status_bar_power_icon_strip    
  yabai -m config status_bar_space_icon					
  yabai -m config status_bar_clock_icon					
# }}}
# Global settings {{{
  yabai -m config layout                       bsp
  yabai -m config top_padding                  "$PADDING_TOP"
  yabai -m config bottom_padding               "$PADDING"
  yabai -m config left_padding                 "$PADDING"
  yabai -m config right_padding                "$PADDING"
  yabai -m config window_gap                   "$PADDING"

  yabai -m config split_ratio                  0.5
  yabai -m config auto_balance                 off
  yabai -m config mouse_modifier               ctrl
  yabai -m config mouse_action1                resize
  yabai -m config mouse_action2                move
# }}}
# Window settings {{{
  yabai -m config window_shadow                float
  yabai -m config window_topmost               on
  yabai -m config window_opacity       				 on
  yabai -m config window_opacity_duration      0.0
  yabai -m config active_window_opacity        1.0
  yabai -m config normal_window_opacity        1.0
  # Window border settings {{{
    yabai -m config window_border                on
    yabai -m config window_border_width          0
    yabai -m config window_border_radius         0
    yabai -m config active_window_border_topmost off
    yabai -m config window_border_placement      inset # exterior (default), inset, interior

    yabai -m config normal_window_border_color   0x0045a1cc # nord snow storm gray
    yabai -m config active_window_border_color   0xff5e81ac # nord frost blue
    yabai -m config insert_window_border_color   0xffd48ead # nord aurora purple
  # }}}
# }}}
# Mouse settings {{{
  yabai -m config mouse_follows_focus          on
  yabai -m config focus_follows_mouse          autofocus
  yabai -m config focus_follows_mouse          off # off/autofocus/autoraise
# }}}
# Spaces can be assigned a label in yabai {{{
  yabai -m space 1 --label Vim
  yabai -m space 2 --label Term
  yabai -m space 3 --label Browser
  yabai -m space 4 --label Music

  # Unfortunately, space labels can't be used in rules,
  # although could compute mission-control-index programatically to achieve the
  # same effect: $DOTFILES/scripts/yabai/space-label-to-index
  #   yabai -m rule --add app="App Store" space="$(space-label-to-index 'Term')"


# }}}
# Window rules ================================================================= {{{
yabai -m rule --add app="ColorSlurp" manage=off border=off
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off border=off
yabai -m rule --add app="App Store" manage=off border=off
yabai -m rule --add title='.*Preferences.*' manage=off border=off topmost=on                           # float any window with "Preferences" in title
yabai -m rule --add title='.*Install.*' manage=off border=off topmost=on                               # float installers
yabai -m rule --add app="^System Preferences$" manage=off border=off                                   # needed because ↑ doesn't cover sub-windows of system prefs. E.g., "General"
yabai -m rule --add app="Activity Monitor" manage=off border=off
yabai -m rule --add app="Calculator" manage=off border=off
yabai -m rule --add app="Transmission" manage=off border=off
yabai -m rule --add app="Dictionary" manage=off border=off
yabai -m rule --add app="Messages" manage=off border=off
yabai -m rule --add app="Preview" manage=off border=off
yabai -m rule --add app="Xee³" manage=off border=off
yabai -m rule --add app="^Simulator$" manage=off

yabai -m rule --add app="Google Chrome" title="Task Manager" manage=off
yabai -m rule --add app="iTerm2" manage=off border=off
yabai -m rule --add app="iBooks" manage=off
yabai -m rule --add app="Archive Utility" manage=off
yabai -m rule --add app="The Unarchiver" manage=off
yabai -m rule --add app="1Password 7" manage=off grid=4:4:1:1:2:2
yabai -m rule --add app="Karabiner" manage=off
yabai -m rule --add app="Transmission" manage=off
yabai -m rule --add app="Simulator" manage=off
yabai -m rule --add app="VLC" manage=off
yabai -m rule --add app="snwe" sticky=on
yabai -m rule --add app="mpv"  grid=1:1:0:0:1:1 border=off manage=off
yabai -m rule --add app="IINA" grid=1:1:0:0:1:1 border=off
yabai -m rule --add app="IINA" title="Window" manage=off                                               # preference window, open url
yabai -m rule --add app="qutebrowser" manage=on                                                        # for frameless qutebrowser
yabai -m rule --add app="Google Chrome" title=invalid opacity=0.0                                      # attempting tod hide the chrome status bar in bottom left ... it doesn't work
yabai -m rule --add app="macfeh" manage=off border=off
yabai -m rule --add app='^Google Chrome$' title='^Picture in Picture$' manage=off topmost=on sticky=on # Make Chrome Picture in Picture mode windows appear topmost and on all spaces
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add app="kitty" title="dropdown" manage=off grid=8:8:1:1:6:6 border=on shadow=on sticky=on topmost=on
# yabai -m signal --add event=application_launched app=kitty title=dropdown action='yabai -m windows "${YABAI_WINDOW_ID}" --toggle shadow'
# }}}
# Signals ================================================================= {{{
yabai -m signal --add event=space_changed action="yabai -m window --focus largest" # Focus window on space when app / window is closed
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

  # Signals to power ubersicht bar {{{
    yabai -m signal --add event=space_changed action="uber-bar-refresh"
    yabai -m signal --add event=window_created action="uber-bar-refresh"
    yabai -m signal --add event=window_destroyed action="uber-bar-refresh"
    yabai -m signal --add event=window_moved action="uber-bar-refresh"
    yabai -m signal --add event=window_resized action="uber-bar-refresh"
    yabai -m signal --add event=bar_refresh action="uber-bar-refresh"
  # }}}

# }}}
echo "yabai configuration loaded."
